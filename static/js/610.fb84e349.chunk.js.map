{"version":3,"file":"static/js/610.fb84e349.chunk.js","mappings":"uQAMA,EAJiB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OAAO,SAAC,KAAD,CAAMD,GAAIA,EAAV,SAAeC,GACvB,ECoFD,EApFqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,EAAS,CAAEJ,KAAMA,EAAME,OAAQA,GAG/BG,EAAU,qBADCC,EAAAA,EAAAA,MACWC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAEnCC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAG,6CAAyCF,IAIlDG,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAiBgBC,EAHEC,EAdZF,EAAc,mCAAG,+GAEIG,MACrBL,kFAHiB,cAEbM,EAFa,gBAKAA,EAASC,OALT,OAKbC,EALa,OAMnBpB,EAASoB,GACTlB,EAAQkB,EAAKC,QAAQpB,MACrBG,EAAUgB,EAAKE,QAAQC,SARJ,kDAUnBC,QAAQC,MAAR,MAVmB,0DAAH,qDA+BpB,OACE,4BACE,SAAC,EAAD,CAAU7B,GAAIU,EAAd,mBACA,4BACE,gBAAKoB,KArBOV,EAqBQjB,EAAM4B,iBApBfC,IAAfZ,EAtBe,mCAsBuBA,EAAa,IAoBPa,IAAI,MAC5C,4BACE,0BACG9B,EAAM+B,MADT,MApBQf,EAqBkBhB,EAAMgC,kBArBNH,IAATb,EAAqBA,EAAKiB,MAAM,KAAK,GAAK,IAoB3D,QAGA,kDAA0BjC,EAAMkC,iBAChC,sCACA,0BAAOlC,EAAMmC,YACb,oCACA,0BAzBU,SAAAC,GAChB,QAAeP,IAAXO,EACF,MAAO,UAET,IAJ0B,EAIpBC,EAAgB,GAJI,UAKND,GALM,IAK1B,2BAA4B,CAAC,IAAlBE,EAAiB,QAC1BD,EAAcE,KAAKD,EAAME,KAC1B,CAPyB,+BAS1B,OAAOH,EAAcI,KAAK,IAC3B,CAecC,CAAU1C,EAAMoC,cAEzB,4BACE,sDACA,2BACE,yBACE,SAAC,KAAD,CAAMvC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAA8C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,CAAQC,QAASvC,cAM5B,C,sBCtFD,SAASwC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO7B,GAEP,YADAuB,EAAOvB,EAET,CAEI4B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMrB,EACR,GACF,CACF,C","sources":["components/BackLink.jsx","pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst BackLink = ({ to, children }) => {\n  return <Link to={to}>{children}</Link>;\n};\n\nexport default BackLink;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport BackLink from 'components/BackLink';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const [cast, setCast] = useState([]);\n  const [review, setReview] = useState([]);\n  const outlet = { cast: cast, review: review };\n\n  const location = useLocation();\n  const backToLink = location.state?.from ?? '/movies';\n\n  const { id } = useParams();\n  const url = `https://api.themoviedb.org/3/movie/${id}`;\n  const apiKey = `?api_key=72798596a23321893a7ef47e798d0f72`;\n  const imageURL = 'https://image.tmdb.org/t/p/w300/';\n\n  useEffect(() => {\n    fetchMovieById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchMovieById = async () => {\n    try {\n      const response = await fetch(\n        url + apiKey + '&append_to_response=credits,reviews'\n      );\n      const data = await response.json();\n      setMovie(data);\n      setCast(data.credits.cast);\n      setReview(data.reviews.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getPoster = posterPath =>\n    posterPath !== undefined ? imageURL + posterPath : '';\n\n  const getDate = date => (date !== undefined ? date.split('-')[0] : '');\n\n  const getGenres = genres => {\n    if (genres === undefined) {\n      return 'No data';\n    }\n    const arrayOfGenres = [];\n    for (const genre of genres) {\n      arrayOfGenres.push(genre.name);\n    }\n\n    return arrayOfGenres.join(' ');\n  };\n\n  return (\n    <div>\n      <BackLink to={backToLink}>Back</BackLink>\n      <div>\n        <img src={getPoster(movie.poster_path)} alt=\"\"></img>\n        <div>\n          <h1>\n            {movie.title} ({getDate(movie.release_date)})\n          </h1>\n          <span>User Average Vote: {movie.vote_average}</span>\n          <h2>Overview</h2>\n          <span>{movie.overview}</span>\n          <h3>Genres</h3>\n          <span>{getGenres(movie.genres)}</span>\n        </div>\n        <div>\n          <span>Additional information</span>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet context={outlet} />\n          </Suspense>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["to","children","useState","movie","setMovie","cast","setCast","review","setReview","outlet","backToLink","useLocation","state","from","id","useParams","url","useEffect","fetchMovieById","date","posterPath","fetch","response","json","data","credits","reviews","results","console","error","src","poster_path","undefined","alt","title","release_date","split","vote_average","overview","genres","arrayOfGenres","genre","push","name","join","getGenres","Suspense","fallback","context","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err"],"sourceRoot":""}